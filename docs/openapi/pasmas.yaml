openapi: 3.0.0
info:
  title: Passenger Management System (PASMAS)
  description: TODO
  version: '0.1'
servers:
  - url: 'http://localhost:8080'
paths:
  /api/passenger:
    get:
      summary: Retrieves all passengers
      description: Fetches a list of all passengers in the system.
      responses:
        '200':
          description: A list of passengers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengerStructSelect'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Creates a passenger
      description: Creates a new passenger record in the system.
      requestBody:
        description: Passenger data to be inserted.
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/PassengerStructInsert'
      responses:
        '200':
          description: Passenger successfully created.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PassengerStructSelect'
        '400':
          description: 'Bad request, incorrect body format.'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal server error, failed to create passenger.'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Fully updated a passenger
      description: Updates a passenger with all attributes
      requestBody:
        description: Passenger Object with its id.
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/PassengerStructUpdate'
      responses:
        '200':
          description: Passenger successfully updated.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PassengerStructSelect'
        '400':
          description: 'Bad request, incorrect body format.'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 'Internal server error, failed to update passenger.'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
  '/api/passenger/{id}':
    delete:
      summary: Deletes a passenger
      description: Deletes the passenger record with the specified ID from the system.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: The unique identifier of the passenger to delete.
      responses:
        '204':
          description: Passenger successfully deleted.
        '500':
          description: 'Internal server error, failed to delete passenger.'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    SuccessResponse:
      properties:
        success:
          type: boolean
        response:
          type: object
    ErrorResponse:
      properties:
        success:
          type: boolean
        errorCode:
          type: integer
          format: int32
        errorBody:
          type: object
    Division:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PassengerStructSelect:
      properties:
        id:
          type: integer
          format: int64
        lastName:
          type: string
        firstName:
          type: string
        weight:
          type: integer
          format: int32
        division:
          type: object
          $ref: '#/components/schemas/Division'
    PassengerStructInsert:
      properties:
        id:
          type: integer
          format: int64
        lastName:
          type: string
        firstName:
          type: string
        weight:
          type: integer
          format: int32
        division_id:
          type: integer
          format: int64
    PassengerStructUpdate:
      properties:
        id:
          type: integer
          format: int64
        lastName:
          type: string
        firstName:
          type: string
        weight:
          type: integer
          format: int32
        division_id:
          type: integer
          format: int64

