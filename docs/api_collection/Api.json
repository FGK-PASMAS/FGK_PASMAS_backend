{
	"info": {
		"_postman_id": "56086f54-6699-4e7d-82bf-33f28736b90f",
		"name": "Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "30997389-56086f54-6699-4e7d-82bf-33f28736b90f"
	},
	"item": [
		{
			"name": "debug",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29fa411e-5933-486e-bae7-3d25ed854c81",
								"exec": [
									"pm.test(\"status\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"response\", function() {",
									"    pm.response.to.have.jsonBody(\"success\", true)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "23bd59ea-e82a-46b7-a974-990fff5914ec",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/debug/ping",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"debug",
								"ping"
							]
						},
						"description": "Pings the backend"
					},
					"response": [
						{
							"id": "7ed701b7-f2a4-43e9-bc9a-799a64907c54",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/api/debug/ping",
									"path": [
										"api",
										"debug",
										"ping"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 10:08:20 GMT"
								},
								{
									"key": "Content-Length",
									"value": "34"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"response\": \"pong\"\n}"
						}
					]
				}
			],
			"id": "25a47d97-1afc-48cf-82c8-09ef1e8f74e1",
			"description": "The debug endpoint is primarily for debugging purposes."
		},
		{
			"name": "passenger",
			"item": [
				{
					"name": "Get all Passengers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfa3368f-17d5-4a83-90e0-d1b2273d5eb6",
								"exec": [
									"pm.test(\"status\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"response\", function() {",
									"    pm.response.to.have.jsonBody(\"success\", true)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "36247526-14b5-425a-8d04-9dfac563307d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/passengers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"passengers"
							]
						},
						"description": "Retrieves all passengers from the database and returns them as a list.  \nPlease note that the division is returned as an object."
					},
					"response": [
						{
							"id": "cd8abf19-0efc-4b12-bb98-c1fe83957f2c",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/api/passengers",
									"path": [
										"api",
										"passengers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:16:54 GMT"
								},
								{
									"key": "Content-Length",
									"value": "281"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"response\": [\n        {\n            \"id\": 1,\n            \"lastName\": \"Max\",\n            \"firstName\": \"Mustermann\",\n            \"weight\": 42\n        },\n        {\n            \"id\": 2,\n            \"lastName\": \"Maria\",\n            \"firstName\": \"Musterfrau\",\n            \"weight\": 42\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create Passenger",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ff4469b-d150-4104-a656-50306a930a8d",
								"exec": [
									"pm.test(\"status\", function() {",
									"    pm.response.to.have.status(201)",
									"})",
									"",
									"pm.test(\"response\", function() {",
									"    pm.response.to.have.jsonBody(\"success\", true)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9427160c-064f-4b8f-a2da-16cd2c8931ac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\",\n    \"weight\": 42,\n    \"divisionId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/passengers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"passengers"
							]
						},
						"description": "Creates a new passenger in the database.  \nPlease note that this call triggers a real-time (SSE) event upon success."
					},
					"response": [
						{
							"id": "94dee038-d947-43ff-9dcc-178870fbc348",
							"name": "201",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\",\n    \"weight\": 42\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/passengers",
									"path": [
										"api",
										"passengers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:14:28 GMT"
								},
								{
									"key": "Content-Length",
									"value": "151"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"response\": {\n        \"id\": 1,\n        \"lastName\": \"Max\",\n        \"firstName\": \"Mustermann\",\n        \"weight\": 42\n    }\n}"
						},
						{
							"id": "e7381e6a-4aee-4a62-a1d3-b8a937ef0c65",
							"name": "400 - INVALID_REQUEST_BODY",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/passengers",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"passengers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:15:24 GMT"
								},
								{
									"key": "Content-Length",
									"value": "157"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"type\": \"INVALID_REQUEST_BODY\",\n    \"body\": \"Key: 'PassengerStructInsert.Weight' Error:Field validation for 'Weight' failed on the 'required' tag\"\n}"
						}
					]
				},
				{
					"name": "Update Passenger",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb99fda3-8c86-4638-bf30-93e4bf46ba11",
								"exec": [
									"pm.test(\"status\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"response\", function() {",
									"    pm.response.to.have.jsonBody(\"success\", true)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9639f753-b49d-4f29-8be0-6a12609d3387",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\",\n    \"weight\": 72,\n    \"divisionid\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/passengers/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"passengers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "passenger id"
								}
							]
						},
						"description": "Updates a passenger in the database.  \nPlease note that this call triggers a real-time (SSE) event upon success.\n\n**! This call will be changed in the future !**"
					},
					"response": [
						{
							"id": "88adad61-e855-4a0f-8431-03121f4aeaed",
							"name": "200",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\",\n    \"weight\": 72,\n    \"divisionid\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/passengers/:id",
									"path": [
										"api",
										"passengers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "passenger id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:17:28 GMT"
								},
								{
									"key": "Content-Length",
									"value": "151"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"response\": {\n        \"id\": 1,\n        \"lastName\": \"Max\",\n        \"firstName\": \"Mustermann\",\n        \"weight\": 72\n    }\n}"
						},
						{
							"id": "10781527-ad7f-4cd6-b73e-ce301ee7dec1",
							"name": "400 - INVALID_REQUEST_BODY",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/passengers/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"passengers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "passenger id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:18:02 GMT"
								},
								{
									"key": "Content-Length",
									"value": "157"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"type\": \"INVALID_REQUEST_BODY\",\n    \"body\": \"Key: 'PassengerStructUpdate.Weight' Error:Field validation for 'Weight' failed on the 'required' tag\"\n}"
						},
						{
							"id": "3c10cfd2-d253-44d8-ad0b-2b359dcacb39",
							"name": "404",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"lastName\": \"Max\",\n    \"firstName\": \"Mustermann\",\n    \"weight\": 72\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/passengers/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"passengers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "99",
											"description": "passenger id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:18:30 GMT"
								},
								{
									"key": "Content-Length",
									"value": "68"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"type\": \"OBJECT_NOT_FOUND\",\n    \"body\": \"No object found\"\n}"
						}
					]
				},
				{
					"name": "Delete Passenger",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3dd2fe6-1445-4450-b9e8-121fae7f3996",
								"exec": [
									"pm.test(\"status\", function() {",
									"    pm.response.to.have.status(204)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "99d3f9ce-cff8-40a3-86ff-3d12e3b66e57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/passengers/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"passengers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "passenger id"
								}
							]
						},
						"description": "Delete a passenger.  \nPlease note that if there is no passenger with the respective ID, nothing will happen, but the OK response code will still be returned."
					},
					"response": [
						{
							"id": "d86b7c32-5b10-4131-adc0-68e9a054aafe",
							"name": "404",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/api/passengers/:id",
									"path": [
										"api",
										"passengers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "passenger id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:13:54 GMT"
								},
								{
									"key": "Content-Length",
									"value": "68"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"type\": \"OBJECT_NOT_FOUND\",\n    \"body\": \"No object found\"\n}"
						},
						{
							"id": "961d2372-3bfd-44df-ba48-c2189850f251",
							"name": "204",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/passengers/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"passengers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "passenger id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:14:52 GMT"
								}
							],
							"cookie": []
						}
					]
				}
			],
			"id": "cb329518-377b-4304-b89c-a07a03276314"
		},
		{
			"name": "division",
			"item": [
				{
					"name": "Get Divisions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adb0546f-5114-4f8a-a546-b44d417e1015",
								"exec": [
									"pm.test(\"status\", function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"response\", function() {",
									"    pm.response.to.have.jsonBody(\"success\", true)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a5822158-0bcf-4454-aca7-c5cacd376e03",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/divisions",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"divisions"
							]
						},
						"description": "Gets all divisions"
					},
					"response": [
						{
							"id": "97040a22-f907-458a-b962-2eca8e7ae037",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/api/divisions",
									"path": [
										"api",
										"divisions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 19 Jan 2024 13:11:44 GMT"
								},
								{
									"key": "Content-Length",
									"value": "181"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"response\": [\n        {\n            \"id\": 1,\n            \"name\": \"Segelflug\",\n            \"passengerCapacity\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Motorsegler\",\n            \"passengerCapacity\": 1\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Motorflug\",\n            \"passengerCapacity\": 3\n        }\n    ]\n}"
						}
					]
				}
			],
			"id": "a49f0f74-c4f6-46e2-8b8b-a2c0220edd76"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d633b776-d622-44b0-a3fc-dda112a8977c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "61f54190-70e1-4c8a-9357-b58b22fdd684",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});"
				]
			}
		}
	]
}